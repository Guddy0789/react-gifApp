{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","placeholder","type","value","onChange","target","prototype","PropTypes","func","isRequired","string","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"oNAEaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAkB5C,OACI,uBAAMC,SAVU,SAACC,GACjBA,EAAEC,iBACGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,MAMlB,UACI,qDAEA,uBACAO,YAAY,uBACZC,KAAK,OACLC,MAAOV,EACPW,SAtBkB,SAACR,GAEvBF,EAAcE,EAAES,OAAOF,UAwBnB,kDAIZb,EAAYgB,UAAY,CACpBf,cAAcgB,IAAUC,KAAKC,WAC7Bf,cAAca,IAAUG,OAAOD,Y,mCCnCtBE,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAgBZM,GAhBY,4CAAH,sDCDPO,EAAc,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAElC,OACI,sBAAKc,UAAU,2DAAf,UAEI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCDHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECHb,SAACA,GAAc,IAAD,EAEZpB,mBAAS,CAC/B2B,KAAM,GACNa,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KA6BtC,OArBAC,qBAAU,WACNxB,EAAQC,GAAUwB,MAAK,SAACC,GAExBC,YAAW,WAEHJ,EAAS,CACTf,KAAMkB,EACNL,SAAS,MAGb,UAIN,CAACpB,IAOIqB,EDxBeM,CAAa3B,GAA7BO,EAF+B,EAE/BA,KAAKa,EAF0B,EAE1BA,QAGX,OACI,qCACA,6BAAKpB,IAEJoB,GAAW,yCAEZ,qBAAKJ,UAAU,YAAf,SAGQT,EAAKE,KAAK,SAACC,GAAD,OAAU,cAAC,EAAD,eAA6BA,GAAXA,EAAIC,aEU3CiB,MA1Bf,WAAwB,IAAD,EAGiBhD,mBAAS,CAAC,WAH3B,mBAGZiD,EAHY,KAGAlD,EAHA,KAMnB,OACI,qCACA,8CAGA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAGA,6BAEIkD,EAAWpB,KAAK,SAACT,GAAD,OAAe,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MChBzD8B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.228f8ade.chunk.js","sourcesContent":["import React, {useState}from 'react'\r\nimport PropTypes from 'prop-types';\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) =>{\r\n\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const hadleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        if ( inputValue.trim().length > 2 ){\r\n            setCategories(cats => [inputValue,...cats]);\r\n            setInputValue('');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={hadleSubmit}>\r\n            <h2>Añadir Categoria</h2>\r\n            \r\n            <input \r\n            placeholder='ingrese una busqueda'\r\n            type='text'\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n            \r\n            />\r\n           \r\n            <button> Agregar</button>\r\n        </form>\r\n    )\r\n}\r\nAddCategory.prototype = {\r\n    setCategories:PropTypes.func.isRequired,\r\n    setInputValue:PropTypes.string.isRequired\r\n}","\r\n\r\n\r\nexport const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=pAaHNaAzGI5msGzXF8KpS1aW5RQDst7e`\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n\r\n        }\r\n\r\n    })\r\n\r\n    // console.log(resp);\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__bounce animate__delay-2s\">\r\n           \r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n// import React, { useState, useEffect } from 'react'\r\n// import GifExpertApp from '../GifExpertApp';\r\n// import { getGif } from '../helpers/getGifs';\r\n import { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n   const {data,loading} = useFetchGifs(category);\r\n\r\n\r\n    return (\r\n        <>\r\n        <h3>{category}</h3>\r\n        \r\n        {loading && <p>Loading </p>}\r\n   \r\n        <div className=\"card-grid\">\r\n       \r\n            {\r\n                data.map( (img) => (<GifGridItem key={img.id}{...img}/>\r\n\r\n\r\n\r\n                ))\r\n            }\r\n\r\n\r\n\r\n\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true,\r\n    });\r\n\r\n    \r\n    useEffect(() => {\r\n        getGifs(category).then((imgs)=>{\r\n            \r\n        setTimeout(() => {\r\n\r\n                setState({\r\n                data: imgs,\r\n                loading: false,\r\n            })\r\n\r\n         }, 3000);\r\n\r\n        })\r\n\r\n    },[category])\r\n    \r\n\r\n\r\n   \r\n    // const [images, setImages] = useState([]);\r\n   \r\n    return state;\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nfunction GifExpertApp(){\r\n    \r\n\r\n    const [categories, setCategories] = useState(['vegeta']);\r\n\r\n   \r\n    return (\r\n        <>\r\n        <h2>GifExpertApp</h2>\r\n\r\n        {/* Primer Modulo Buscador de categorias y añade a la lista */}\r\n        <AddCategory setCategories={setCategories}/>\r\n        <hr/>\r\n      \r\n        {/* Segundo Modulo despliega categorias */}\r\n        <ol>\r\n            {\r\n            categories.map( (category) => (<GifGrid key={category} category={category}/>))\r\n            }\r\n        </ol>\r\n\r\n        </>\r\n        \r\n    )\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n\n    <GifExpertApp />,\n\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}